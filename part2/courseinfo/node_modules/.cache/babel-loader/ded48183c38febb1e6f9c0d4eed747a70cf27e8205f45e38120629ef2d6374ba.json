{"ast":null,"code":"var _jsxFileName = \"/Users/zainabahmad/SECCLO/fullstack/part1/courseinfo/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = _ref => {\n  let {\n    name\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1,\n    columnNumber: 30\n  }, this);\n};\n//const Total = ({ sum }) => <p>Number of exercises {sum}</p>\n_c = Header;\nconst Part = _ref2 => {\n  let {\n    part\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\" \", part.name, \" \", part.exercises, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n};\n_c2 = Part;\nconst Content = _ref3 => {\n  let {\n    parts\n  } = _ref3;\n  // <>\n  //   <Part part={parts[0]} />\n  //   <Part part={parts[1]} />\n  //   <Part part={parts[2]} /> \n  //   <Part part={parts[3]} />      \n  // </>\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", parts.map(part => /*#__PURE__*/_jsxDEV(Part, {\n      part: part\n    }, part.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 30\n    }, this)), \" \"]\n  }, void 0, true);\n};\n_c3 = Content;\nconst Course = _ref4 => {\n  let {\n    props\n  } = _ref4;\n  console.log('name', props.name);\n  console.log('parts', props.parts);\n  console.log('course', props.course);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      name: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: props.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      course: props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n_c4 = Course;\nconst Total = _ref5 => {\n  let {\n    course\n  } = _ref5;\n  const total = course.parts.reduce((total, part) => {\n    return total + part.exercises;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: /*#__PURE__*/_jsxDEV(\"b\", {\n      children: [\"Total of \", total, \" exercises\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c5 = Total;\nconst App = () => {\n  const courses = [{\n    name: 'Half Stack application development',\n    id: 1,\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component',\n      exercises: 14,\n      id: 3\n    }, {\n      name: 'Redux',\n      exercises: 11,\n      id: 4\n    }]\n  }, {\n    name: 'Node.js',\n    id: 2,\n    parts: [{\n      name: 'Routing',\n      exercises: 3,\n      id: 1\n    }, {\n      name: 'Middlewares',\n      exercises: 7,\n      id: 2\n    }]\n  }];\n  return courses.map(course => /*#__PURE__*/_jsxDEV(Course, {\n    course: course\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 17\n  }, this));\n};\n_c6 = App;\nexport default App;\n\n// const App = () => {\n//   const course = 'Half Stack application development'\n//   const parts = [\n//     {\n//       name: 'Fundamentals of React',\n//       exercises: 10\n//     },\n//     {\n//       name: 'Using props to pass data',\n//       exercises: 7\n//     },\n//     {\n//       name: 'State of a component',\n//       exercises: 14\n//     }\n//   ]\n\n//   return (\n//     <div>\n//       {/* <Header course={course} />\n//       <Content parts={parts} /> */}\n//       <Course />\n//       <Total sum={parts[0].exercises + parts[1].exercises + parts[2].exercises} />\n//     </div>\n//   )\n// }\n\n// const App = () => {\n\n//   const course = {\n//     name: 'Half Stack application development',\n//     parts: [\n//       {\n//         name: 'Fundamentals of React',\n//         exercises: 10\n//       },\n//       {\n//         name: 'Using props to pass data',\n//         exercises: 7\n//       },\n//       {\n//         name: 'State of a component',\n//         exercises: 14\n//       }\n//     ]\n//   }\n\n//   return (\n//     <div>\n//       < Header course={course.name} />\n//       {/* < Content part={part} exercise={exercises} /> */}\n//       <Content parts={course.parts} />\n//       {/* < Total exercise={exercises} /> */}\n//       < Total parts={course.parts} />\n//     </div>\n//   )\n// }\n\n// const Header = (props) => {\n//   console.log('Header props: ' + props)\n//   return (\n//     <div>\n//       <h1>{props.course}</h1>\n//     </div>\n\n//   )\n// }\n\n// const Content = (props) => {\n//   console.log('Content props: ' + props)\n//   return (\n//     <div>\n//       <Part partNumber={props.parts[0].name} exerciseNumber={props.parts[0].exercises} />\n//       <Part partNumber={props.parts[1].name} exerciseNumber={props.parts[1].exercises} />\n//       <Part partNumber={props.parts[2].name} exerciseNumber={props.parts[2].exercises} />\n//     </div>\n//   )\n// }\n\n// const Part = (props) => {\n//   console.log('Part props: ' + props)\n//   return (\n//     <div>\n//       <p> {props.partNumber} {props.exerciseNumber}</p>\n//     </div>\n//   )\n\n// }\n// const Total = (props) => {\n//   console.log('Total props: ' + props)\n//   const total = props.parts[0].exercises + props.parts[1].exercises + props.parts[2].exercises\n//   return (\n//     <div>\n//       <p>Number of exercises {total} </p>\n//     </div>\n//   )\n// }\n\n// export default App\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Part\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Course\");\n$RefreshReg$(_c5, \"Total\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["Header","name","Part","part","exercises","Content","parts","map","id","Course","props","console","log","course","Total","total","reduce","App","courses"],"sources":["/Users/zainabahmad/SECCLO/fullstack/part1/courseinfo/src/App.js"],"sourcesContent":["const Header = ({ name }) => <h1>{name}</h1>\n//const Total = ({ sum }) => <p>Number of exercises {sum}</p>\nconst Part = ({ part }) => \n  <p> {part.name} {part.exercises} </p>\n\nconst Content = ({ parts }) => {\n  // <>\n  //   <Part part={parts[0]} />\n  //   <Part part={parts[1]} />\n  //   <Part part={parts[2]} /> \n  //   <Part part={parts[3]} />      \n  // </>\n  return (\n    <> {parts.map( (part) => <Part key={part.id} part = {part} /> )} </>\n  )\n}\n\nconst Course = ({props}) => {\n  console.log('name' , props.name)\n  console.log('parts' ,props.parts)\n  console.log('course', props.course)\n  return(\n      <>\n          <Header name = {props.name} />\n          <Content parts = {props.parts} />\n          <Total course = {props}/>\n      </>\n  )\n}\n\nconst Total = ({ course }) => {\n  const total = course.parts.reduce(\n      (total, part) => { return total + part.exercises}, 0 );\n  return(\n    <p><b>Total of {total} exercises</b></p>\n  ) \n}\n\n\nconst App = () => {\n  const courses = [\n    {\n      name: 'Half Stack application development',\n      id: 1,\n      parts: [\n        {\n          name: 'Fundamentals of React',\n          exercises: 10,\n          id: 1\n        },\n        {\n          name: 'Using props to pass data',\n          exercises: 7,\n          id: 2\n        },\n        {\n          name: 'State of a component',\n          exercises: 14,\n          id: 3\n        },\n        {\n          name: 'Redux',\n          exercises: 11,\n          id: 4\n        }\n      ]\n    }, \n    {\n      name: 'Node.js',\n      id: 2,\n      parts: [\n        {\n          name: 'Routing',\n          exercises: 3,\n          id: 1\n        },\n        {\n          name: 'Middlewares',\n          exercises: 7,\n          id: 2\n        }\n      ]\n    }\n  ]\n\n  return (courses.map(\n    (course) => <Course course={course} />\n  ));\n}\n\nexport default App\n\n\n// const App = () => {\n//   const course = 'Half Stack application development'\n//   const parts = [\n//     {\n//       name: 'Fundamentals of React',\n//       exercises: 10\n//     },\n//     {\n//       name: 'Using props to pass data',\n//       exercises: 7\n//     },\n//     {\n//       name: 'State of a component',\n//       exercises: 14\n//     }\n//   ]\n\n//   return (\n//     <div>\n//       {/* <Header course={course} />\n//       <Content parts={parts} /> */}\n//       <Course />\n//       <Total sum={parts[0].exercises + parts[1].exercises + parts[2].exercises} />\n//     </div>\n//   )\n// }\n\n\n\n// const App = () => {\n \n//   const course = {\n//     name: 'Half Stack application development',\n//     parts: [\n//       {\n//         name: 'Fundamentals of React',\n//         exercises: 10\n//       },\n//       {\n//         name: 'Using props to pass data',\n//         exercises: 7\n//       },\n//       {\n//         name: 'State of a component',\n//         exercises: 14\n//       }\n//     ]\n//   }\n\n\n//   return (\n//     <div>\n//       < Header course={course.name} />\n//       {/* < Content part={part} exercise={exercises} /> */}\n//       <Content parts={course.parts} />\n//       {/* < Total exercise={exercises} /> */}\n//       < Total parts={course.parts} />\n//     </div>\n//   )\n// }\n\n// const Header = (props) => {\n//   console.log('Header props: ' + props)\n//   return (\n//     <div>\n//       <h1>{props.course}</h1>\n//     </div>\n\n//   )\n// }\n\n// const Content = (props) => {\n//   console.log('Content props: ' + props)\n//   return (\n//     <div>\n//       <Part partNumber={props.parts[0].name} exerciseNumber={props.parts[0].exercises} />\n//       <Part partNumber={props.parts[1].name} exerciseNumber={props.parts[1].exercises} />\n//       <Part partNumber={props.parts[2].name} exerciseNumber={props.parts[2].exercises} />\n//     </div>\n//   )\n// }\n\n// const Part = (props) => {\n//   console.log('Part props: ' + props)\n//   return (\n//     <div>\n//       <p> {props.partNumber} {props.exerciseNumber}</p>\n//     </div>\n//   )\n\n// }\n// const Total = (props) => {\n//   console.log('Total props: ' + props)\n//   const total = props.parts[0].exercises + props.parts[1].exercises + props.parts[2].exercises\n//   return (\n//     <div>\n//       <p>Number of exercises {total} </p>\n//     </div>\n//   )\n// }\n\n// export default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}